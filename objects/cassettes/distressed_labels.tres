[gd_resource type="ShaderMaterial" load_steps=33 format=2]

[ext_resource path="res://textures/CassetteLabels.png" type="Texture" id=1]
[ext_resource path="res://textures/CassetteDistressMap.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, -3.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, -2.0 ]

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
width = 1024
height = 1024
seamless = true
noise = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=14]
output_port_for_preview = 0
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=16]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 6, 3, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=17]

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 1.0, 1, -2.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Distress"
hint = 1
max = 3.0

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 2.0, 1, -2.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 18

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeTexture" id=25]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=27]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.2, 0 ) ]

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "Variant"
hint = 2
max = 2.0
step = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=30]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = SubResource( 5 )

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.2, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.25, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=9]
uniform_name = "Offset"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 8.0 ]
operator = 2

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode cull_front, specular_schlick_ggx, async_visible;

uniform float Variant : hint_range(0, 2, 1);
uniform sampler2D tex_frg_2;
uniform float Distress : hint_range(0, 3);
uniform vec3 Offset;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_24;
uniform sampler2D tex_frg_13;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// ScalarUniform:27
	float n_out27p0 = Variant;

// ScalarOp:28
	float n_in28p1 = 3.00000;
	float n_out28p0 = n_out27p0 / n_in28p1;

// VectorCompose:29
	float n_in29p1 = 0.00000;
	float n_in29p2 = 0.00000;
	vec3 n_out29p0 = vec3(n_out28p0, n_in29p1, n_in29p2);

// VectorOp:26
	vec3 n_out26p0 = n_out3p0 + n_out29p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out26p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:19
	float n_out19p0 = Distress;

// ScalarOp:21
	float n_in21p0 = 2.00000;
	float n_out21p0 = n_in21p0 - n_out19p0;

// ScalarFunc:22
	float n_out22p0 = min(max(n_out21p0, 0.0), 1.0);

// VectorUniform:8
	vec3 n_out8p0 = Offset;

// VectorOp:5
	vec3 n_out5p0 = n_out3p0 + n_out8p0;

// VectorOp:7
	vec3 n_in7p1 = vec3(0.50000, 0.25000, 0.00000);
	vec3 n_out7p0 = n_out5p0 * n_in7p1;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out7p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// ScalarOp:9
	float n_in9p1 = 8.00000;
	float n_out9p0 = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)) * n_in9p1;

// ScalarOp:11
	float n_in11p1 = -3.50000;
	float n_out11p0 = n_out9p0 + n_in11p1;

// Texture:24
	vec4 tex_frg_24_read = texture(tex_frg_24, n_out3p0.xy);
	vec3 n_out24p0 = tex_frg_24_read.rgb;
	float n_out24p1 = tex_frg_24_read.a;

// ScalarOp:23
	float n_out23p0 = n_out11p0 + dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:20
	float n_out20p0 = n_out23p0 - n_out19p0;

// ScalarOp:18
	float n_out18p0 = n_out22p0 - n_out20p0;

// ScalarFunc:17
	float n_out17p0 = min(max(n_out18p0, 0.0), 1.0);

// VectorScalarMix:16
	vec3 n_in16p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out16p0 = mix(n_out2p0, n_in16p1, n_out17p0);

// Input:14
	vec3 n_out14p0 = vec3(UV, 0.0);

// VectorOp:15
	vec3 n_in15p1 = vec3(6.00000, 3.00000, 0.00000);
	vec3 n_out15p0 = n_out14p0 * n_in15p1;

// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, n_out15p0.xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// ScalarOp:25
	float n_in25p1 = 2.00000;
	float n_out25p0 = dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333)) * n_in25p1;

// ScalarOp:12
	float n_out12p0 = n_out20p0 + n_out25p0;

// ScalarFunc:10
	float n_out10p0 = min(max(n_out12p0, 0.0), 1.0);

// Output:0
	ALBEDO = n_out16p0;
	ALPHA = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -623.107, -158.634 )
modes/cull = 1
nodes/fragment/0/position = Vector2( 1300, 300 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -520, -200 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -1280, 220 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -520, 480 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -1040, 420 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -840, 420 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( -1420, 440 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -320, 340 )
nodes/fragment/10/node = SubResource( 11 )
nodes/fragment/10/position = Vector2( 800, 620 )
nodes/fragment/11/node = SubResource( 12 )
nodes/fragment/11/position = Vector2( -140, 320 )
nodes/fragment/12/node = SubResource( 13 )
nodes/fragment/12/position = Vector2( 560, 600 )
nodes/fragment/13/node = SubResource( 14 )
nodes/fragment/13/position = Vector2( -220, 780 )
nodes/fragment/14/node = SubResource( 15 )
nodes/fragment/14/position = Vector2( -780, 860 )
nodes/fragment/15/node = SubResource( 16 )
nodes/fragment/15/position = Vector2( -540, 840 )
nodes/fragment/16/node = SubResource( 17 )
nodes/fragment/16/position = Vector2( 1020, 240 )
nodes/fragment/17/node = SubResource( 18 )
nodes/fragment/17/position = Vector2( 800, 360 )
nodes/fragment/18/node = SubResource( 19 )
nodes/fragment/18/position = Vector2( 620, 320 )
nodes/fragment/19/node = SubResource( 20 )
nodes/fragment/19/position = Vector2( 0, 560 )
nodes/fragment/20/node = SubResource( 21 )
nodes/fragment/20/position = Vector2( 340, 380 )
nodes/fragment/21/node = SubResource( 22 )
nodes/fragment/21/position = Vector2( 320, 500 )
nodes/fragment/22/node = SubResource( 23 )
nodes/fragment/22/position = Vector2( 600, 440 )
nodes/fragment/23/node = SubResource( 24 )
nodes/fragment/23/position = Vector2( 60, 320 )
nodes/fragment/24/node = SubResource( 25 )
nodes/fragment/24/position = Vector2( -520, 140 )
nodes/fragment/25/node = SubResource( 26 )
nodes/fragment/25/position = Vector2( 100, 800 )
nodes/fragment/26/node = SubResource( 27 )
nodes/fragment/26/position = Vector2( -840, -60 )
nodes/fragment/27/node = SubResource( 28 )
nodes/fragment/27/position = Vector2( -1620, -60 )
nodes/fragment/28/node = SubResource( 29 )
nodes/fragment/28/position = Vector2( -1280, -80 )
nodes/fragment/29/node = SubResource( 30 )
nodes/fragment/29/position = Vector2( -1080, 0 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 5, 0, 7, 0, 7, 0, 4, 0, 4, 0, 9, 0, 10, 0, 0, 1, 9, 0, 11, 0, 12, 0, 10, 0, 14, 0, 15, 0, 15, 0, 13, 0, 2, 0, 16, 0, 16, 0, 0, 0, 18, 0, 17, 0, 17, 0, 16, 2, 8, 0, 5, 1, 20, 0, 12, 0, 19, 0, 20, 1, 19, 0, 21, 1, 21, 0, 22, 0, 11, 0, 23, 0, 23, 0, 20, 0, 3, 0, 24, 0, 24, 0, 23, 1, 13, 0, 25, 0, 25, 0, 12, 1, 22, 0, 18, 0, 20, 0, 18, 1, 3, 0, 26, 0, 26, 0, 2, 0, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 26, 1 )

[resource]
shader = SubResource( 2 )
shader_param/Variant = 2.0
shader_param/Distress = 0.0
shader_param/Offset = Vector3( 0.659, 1.425, 0 )
